plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.0'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'jacoco'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

jacoco {
    toolVersion = "0.8.11"
}
ext {
    mapstructVersion = "1.5.3.Final"
    lombokVersion = "1.18.26"
    lombokMapstructBindingVersion = "0.2.0"
}


repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
    implementation 'org.apache.httpcomponents.client5:httpclient5'
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    implementation 'com.okta.spring:okta-spring-boot-starter:3.0.5'
    implementation('com.github.joselion:maybe:2.1.0')
    implementation('io.github.cdimascio:dotenv-java:3.0.0')
    implementation('me.paulschwarz:spring-dotenv:4.0.0')
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'jakarta.mail:jakarta.mail-api:2.1.3'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok:1.18.28'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    compileOnly "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}", "org.projectlombok:lombok:${lombokVersion}", "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBindingVersion}"
    testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation('de.flapdoodle.embed:de.flapdoodle.embed.mongo.spring3x:4.12.3')
    testImplementation 'org.mock-server:mockserver-netty:5.14.0'
    testImplementation('org.springframework.security:spring-security-test')
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation 'software.amazon.awssdk:s3:2.20.47'  // AWS S3 SDK
    implementation 'software.amazon.awssdk:auth:2.20.47' // AWS Auth SDK
    implementation 'javax.annotation:javax.annotation-api:1.3.2' // For Javax Annotations
    implementation 'com.auth0:java-jwt:4.4.0'

    implementation 'com.stripe:stripe-java:24.1.0' // Stripe SDK
}

jacocoTestReport {
    dependsOn test
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    '**/*getErrorMessage*',
                    '**/*handleHttpClientException*',
            ])
        }))
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.0
            }
        }
    }
}

test.finalizedBy jacocoTestReport
check.dependsOn jacocoTestCoverageVerification

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
    exclude '**/BePtApplicationTests.class'
}